{
    "types": [
        {
            "name": "problem",
            "displayName": "Possible Problems",
            "description": "These rules relate to possible logic errors in code:",
            "rules": [
                {
                    "name": "array-callback-return",
                    "description": "enforce `return` statements in callbacks of array methods",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "constructor-super",
                    "description": "require `super()` calls in constructors",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "for-direction",
                    "description": "enforce \"for\" loop update clause moving the counter in the right direction.",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "getter-return",
                    "description": "enforce `return` statements in getters",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-async-promise-executor",
                    "description": "disallow using an async function as a Promise executor",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-await-in-loop",
                    "description": "disallow `await` inside of loops",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-class-assign",
                    "description": "disallow reassigning class members",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-compare-neg-zero",
                    "description": "disallow comparing against -0",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-cond-assign",
                    "description": "disallow assignment operators in conditional expressions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-const-assign",
                    "description": "disallow reassigning `const` variables",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-constant-binary-expression",
                    "description": "disallow expressions where the operation doesn't affect the value",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-constant-condition",
                    "description": "disallow constant expressions in conditions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-constructor-return",
                    "description": "disallow returning value from constructor",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-control-regex",
                    "description": "disallow control characters in regular expressions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-debugger",
                    "description": "disallow the use of `debugger`",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-dupe-args",
                    "description": "disallow duplicate arguments in `function` definitions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-dupe-class-members",
                    "description": "disallow duplicate class members",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-dupe-else-if",
                    "description": "disallow duplicate conditions in if-else-if chains",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-dupe-keys",
                    "description": "disallow duplicate keys in object literals",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-duplicate-case",
                    "description": "disallow duplicate case labels",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-duplicate-imports",
                    "description": "disallow duplicate module imports",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-empty-character-class",
                    "description": "disallow empty character classes in regular expressions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-empty-pattern",
                    "description": "disallow empty destructuring patterns",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-ex-assign",
                    "description": "disallow reassigning exceptions in `catch` clauses",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-fallthrough",
                    "description": "disallow fallthrough of `case` statements",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-func-assign",
                    "description": "disallow reassigning `function` declarations",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-import-assign",
                    "description": "disallow assigning to imported bindings",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-inner-declarations",
                    "description": "disallow variable or `function` declarations in nested blocks",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-invalid-regexp",
                    "description": "disallow invalid regular expression strings in `RegExp` constructors",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-irregular-whitespace",
                    "description": "disallow irregular whitespace",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-loss-of-precision",
                    "description": "disallow literal numbers that lose precision",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-misleading-character-class",
                    "description": "disallow characters which are made with multiple code points in character class syntax",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "no-new-symbol",
                    "description": "disallow `new` operators with the `Symbol` object",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-obj-calls",
                    "description": "disallow calling global object properties as functions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-promise-executor-return",
                    "description": "disallow returning values from Promise executor functions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-prototype-builtins",
                    "description": "disallow calling some `Object.prototype` methods directly on objects",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-self-assign",
                    "description": "disallow assignments where both sides are exactly the same",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-self-compare",
                    "description": "disallow comparisons where both sides are exactly the same",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-setter-return",
                    "description": "disallow returning values from setters",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-sparse-arrays",
                    "description": "disallow sparse arrays",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-template-curly-in-string",
                    "description": "disallow template literal placeholder syntax in regular strings",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-this-before-super",
                    "description": "disallow `this`/`super` before calling `super()` in constructors",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-undef",
                    "description": "disallow the use of undeclared variables unless mentioned in `/*global */` comments",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unexpected-multiline",
                    "description": "disallow confusing multiline expressions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unmodified-loop-condition",
                    "description": "disallow unmodified loop conditions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unreachable",
                    "description": "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unreachable-loop",
                    "description": "disallow loops with a body that allows only one iteration",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unsafe-finally",
                    "description": "disallow control flow statements in `finally` blocks",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unsafe-negation",
                    "description": "disallow negating the left operand of relational operators",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "no-unsafe-optional-chaining",
                    "description": "disallow use of optional chaining in contexts where the `undefined` value is not allowed",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unused-private-class-members",
                    "description": "disallow unused private class members",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unused-vars",
                    "description": "disallow unused variables",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-use-before-define",
                    "description": "disallow the use of variables before they are defined",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-backreference",
                    "description": "disallow useless backreferences in regular expressions",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "require-atomic-updates",
                    "description": "disallow assignments that can lead to race conditions due to usage of `await` or `yield`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "use-isnan",
                    "description": "require calls to `isNaN()` when checking for `NaN`",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "valid-typeof",
                    "description": "enforce comparing `typeof` expressions against valid strings",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": true
                }
            ]
        },
        {
            "name": "suggestion",
            "displayName": "Suggestions",
            "description": "These rules suggest alternate ways of doing things:",
            "rules": [
                {
                    "name": "accessor-pairs",
                    "description": "enforce getter and setter pairs in objects and classes",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "arrow-body-style",
                    "description": "require braces around arrow function bodies",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "block-scoped-var",
                    "description": "enforce the use of variables within the scope they are defined",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "camelcase",
                    "description": "enforce camelcase naming convention",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "capitalized-comments",
                    "description": "enforce or disallow capitalization of the first letter of a comment",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "class-methods-use-this",
                    "description": "enforce that class methods utilize `this`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "complexity",
                    "description": "enforce a maximum cyclomatic complexity allowed in a program",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "consistent-return",
                    "description": "require `return` statements to either always or never specify values",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "consistent-this",
                    "description": "enforce consistent naming when capturing the current execution context",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "curly",
                    "description": "enforce consistent brace style for all control statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "default-case",
                    "description": "require `default` cases in `switch` statements",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "default-case-last",
                    "description": "enforce default clauses in switch statements to be last",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "default-param-last",
                    "description": "enforce default parameters to be last",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "dot-notation",
                    "description": "enforce dot notation whenever possible",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "eqeqeq",
                    "description": "require the use of `===` and `!==`",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "func-name-matching",
                    "description": "require function names to match the name of the variable or property to which they are assigned",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "func-names",
                    "description": "require or disallow named `function` expressions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "func-style",
                    "description": "enforce the consistent use of either `function` declarations or expressions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "grouped-accessor-pairs",
                    "description": "require grouped accessor pairs in object literals and classes",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "guard-for-in",
                    "description": "require `for-in` loops to include an `if` statement",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "id-denylist",
                    "description": "disallow specified identifiers",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "id-length",
                    "description": "enforce minimum and maximum identifier lengths",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "id-match",
                    "description": "require identifiers to match a specified regular expression",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "init-declarations",
                    "description": "require or disallow initialization in variable declarations",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-classes-per-file",
                    "description": "enforce a maximum number of classes per file",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-depth",
                    "description": "enforce a maximum depth that blocks can be nested",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-lines",
                    "description": "enforce a maximum number of lines per file",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-lines-per-function",
                    "description": "enforce a maximum number of lines of code in a function",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-nested-callbacks",
                    "description": "enforce a maximum depth that callbacks can be nested",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-params",
                    "description": "enforce a maximum number of parameters in function definitions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-statements",
                    "description": "enforce a maximum number of statements allowed in function blocks",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "multiline-comment-style",
                    "description": "enforce a particular style for multiline comments",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "new-cap",
                    "description": "require constructor names to begin with a capital letter",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-alert",
                    "description": "disallow the use of `alert`, `confirm`, and `prompt`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-array-constructor",
                    "description": "disallow `Array` constructors",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-bitwise",
                    "description": "disallow bitwise operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-caller",
                    "description": "disallow the use of `arguments.caller` or `arguments.callee`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-case-declarations",
                    "description": "disallow lexical declarations in case clauses",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-confusing-arrow",
                    "description": "disallow arrow functions where they could be confused with comparisons",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-console",
                    "description": "disallow the use of `console`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-continue",
                    "description": "disallow `continue` statements",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-delete-var",
                    "description": "disallow deleting variables",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-div-regex",
                    "description": "disallow division operators explicitly at the beginning of regular expressions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-else-return",
                    "description": "disallow `else` blocks after `return` statements in `if` statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-empty",
                    "description": "disallow empty block statements",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-empty-function",
                    "description": "disallow empty functions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-eq-null",
                    "description": "disallow `null` comparisons without type-checking operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-eval",
                    "description": "disallow the use of `eval()`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extend-native",
                    "description": "disallow extending native types",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extra-bind",
                    "description": "disallow unnecessary calls to `.bind()`",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extra-boolean-cast",
                    "description": "disallow unnecessary boolean casts",
                    "recommended": true,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extra-label",
                    "description": "disallow unnecessary labels",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extra-semi",
                    "description": "disallow unnecessary semicolons",
                    "recommended": true,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-floating-decimal",
                    "description": "disallow leading or trailing decimal points in numeric literals",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-global-assign",
                    "description": "disallow assignments to native objects or read-only global variables",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-implicit-coercion",
                    "description": "disallow shorthand type conversions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-implicit-globals",
                    "description": "disallow declarations in the global scope",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-implied-eval",
                    "description": "disallow the use of `eval()`-like methods",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-inline-comments",
                    "description": "disallow inline comments after code",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-invalid-this",
                    "description": "disallow use of `this` in contexts where the value of `this` is `undefined`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-iterator",
                    "description": "disallow the use of the `__iterator__` property",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-label-var",
                    "description": "disallow labels that share a name with a variable",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-labels",
                    "description": "disallow labeled statements",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-lone-blocks",
                    "description": "disallow unnecessary nested blocks",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-lonely-if",
                    "description": "disallow `if` statements as the only statement in `else` blocks",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-loop-func",
                    "description": "disallow function declarations that contain unsafe references inside loop statements",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-magic-numbers",
                    "description": "disallow magic numbers",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-mixed-operators",
                    "description": "disallow mixed binary operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-multi-assign",
                    "description": "disallow use of chained assignment expressions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-multi-str",
                    "description": "disallow multiline strings",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-negated-condition",
                    "description": "disallow negated conditions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-nested-ternary",
                    "description": "disallow nested ternary expressions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-new",
                    "description": "disallow `new` operators outside of assignments or comparisons",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-new-func",
                    "description": "disallow `new` operators with the `Function` object",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-new-object",
                    "description": "disallow `Object` constructors",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-new-wrappers",
                    "description": "disallow `new` operators with the `String`, `Number`, and `Boolean` objects",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-nonoctal-decimal-escape",
                    "description": "disallow `\\8` and `\\9` escape sequences in string literals",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "no-octal",
                    "description": "disallow octal literals",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-octal-escape",
                    "description": "disallow octal escape sequences in string literals",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-param-reassign",
                    "description": "disallow reassigning `function` parameters",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-plusplus",
                    "description": "disallow the unary operators `++` and `--`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-proto",
                    "description": "disallow the use of the `__proto__` property",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-redeclare",
                    "description": "disallow variable redeclaration",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-regex-spaces",
                    "description": "disallow multiple spaces in regular expressions",
                    "recommended": true,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-restricted-exports",
                    "description": "disallow specified names in exports",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-restricted-globals",
                    "description": "disallow specified global variables",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-restricted-imports",
                    "description": "disallow specified modules when loaded by `import`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-restricted-properties",
                    "description": "disallow certain properties on certain objects",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-restricted-syntax",
                    "description": "disallow specified syntax",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-return-assign",
                    "description": "disallow assignment operators in `return` statements",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-return-await",
                    "description": "disallow unnecessary `return await`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-script-url",
                    "description": "disallow `javascript:` urls",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-sequences",
                    "description": "disallow comma operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-shadow",
                    "description": "disallow variable declarations from shadowing variables declared in the outer scope",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-shadow-restricted-names",
                    "description": "disallow identifiers from shadowing restricted names",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-ternary",
                    "description": "disallow ternary operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-throw-literal",
                    "description": "disallow throwing literals as exceptions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-undef-init",
                    "description": "disallow initializing variables to `undefined`",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-undefined",
                    "description": "disallow the use of `undefined` as an identifier",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-underscore-dangle",
                    "description": "disallow dangling underscores in identifiers",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unneeded-ternary",
                    "description": "disallow ternary operators when simpler alternatives exist",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unused-expressions",
                    "description": "disallow unused expressions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-unused-labels",
                    "description": "disallow unused labels",
                    "recommended": true,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-call",
                    "description": "disallow unnecessary calls to `.call()` and `.apply()`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-catch",
                    "description": "disallow unnecessary `catch` clauses",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-computed-key",
                    "description": "disallow unnecessary computed property keys in objects and classes",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-concat",
                    "description": "disallow unnecessary concatenation of literals or template literals",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-constructor",
                    "description": "disallow unnecessary constructors",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-escape",
                    "description": "disallow unnecessary escape characters",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "no-useless-rename",
                    "description": "disallow renaming import, export, and destructured assignments to the same name",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-useless-return",
                    "description": "disallow redundant return statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-var",
                    "description": "require `let` or `const` instead of `var`",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-void",
                    "description": "disallow `void` operators",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-warning-comments",
                    "description": "disallow specified warning terms in comments",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-with",
                    "description": "disallow `with` statements",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "object-shorthand",
                    "description": "require or disallow method and property shorthand syntax for object literals",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "one-var",
                    "description": "enforce variables to be declared either together or separately in functions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "one-var-declaration-per-line",
                    "description": "require or disallow newlines around variable declarations",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "operator-assignment",
                    "description": "require or disallow assignment operator shorthand where possible",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-arrow-callback",
                    "description": "require using arrow functions for callbacks",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-const",
                    "description": "require `const` declarations for variables that are never reassigned after declared",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-destructuring",
                    "description": "require destructuring from arrays and/or objects",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-exponentiation-operator",
                    "description": "disallow the use of `Math.pow` in favor of the `**` operator",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-named-capture-group",
                    "description": "enforce using named capture group in regular expression",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-numeric-literals",
                    "description": "disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-object-has-own",
                    "description": "disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-object-spread",
                    "description": "disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-promise-reject-errors",
                    "description": "require using Error objects as Promise rejection reasons",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-regex-literals",
                    "description": "disallow use of the `RegExp` constructor in favor of regular expression literals",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "prefer-rest-params",
                    "description": "require rest parameters instead of `arguments`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-spread",
                    "description": "require spread operators instead of `.apply()`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "prefer-template",
                    "description": "require template literals instead of string concatenation",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "quote-props",
                    "description": "require quotes around object literal property names",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "radix",
                    "description": "enforce the consistent use of the radix argument when using `parseInt()`",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": true
                },
                {
                    "name": "require-await",
                    "description": "disallow async functions which have no `await` expression",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "require-unicode-regexp",
                    "description": "enforce the use of `u` flag on RegExp",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "require-yield",
                    "description": "require generator functions to contain `yield`",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "sort-imports",
                    "description": "enforce sorted import declarations within modules",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "sort-keys",
                    "description": "require object keys to be sorted",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "sort-vars",
                    "description": "require variables within the same declaration block to be sorted",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "spaced-comment",
                    "description": "enforce consistent spacing after the `//` or `/*` in a comment",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "strict",
                    "description": "require or disallow strict mode directives",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "symbol-description",
                    "description": "require symbol descriptions",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "vars-on-top",
                    "description": "require `var` declarations be placed at the top of their containing scope",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "yoda",
                    "description": "require or disallow \"Yoda\" conditions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                }
            ]
        },
        {
            "name": "layout",
            "displayName": "Layout & Formatting",
            "description": "These rules care about how the code looks rather than how it executes:",
            "rules": [
                {
                    "name": "array-bracket-newline",
                    "description": "enforce linebreaks after opening and before closing array brackets",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "array-bracket-spacing",
                    "description": "enforce consistent spacing inside array brackets",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "array-element-newline",
                    "description": "enforce line breaks after each array element",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "arrow-parens",
                    "description": "require parentheses around arrow function arguments",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "arrow-spacing",
                    "description": "enforce consistent spacing before and after the arrow in arrow functions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "block-spacing",
                    "description": "disallow or enforce spaces inside of blocks after opening block and before closing block",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "brace-style",
                    "description": "enforce consistent brace style for blocks",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "comma-dangle",
                    "description": "require or disallow trailing commas",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "comma-spacing",
                    "description": "enforce consistent spacing before and after commas",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "comma-style",
                    "description": "enforce consistent comma style",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "computed-property-spacing",
                    "description": "enforce consistent spacing inside computed property brackets",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "dot-location",
                    "description": "enforce consistent newlines before and after dots",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "eol-last",
                    "description": "require or disallow newline at the end of files",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "func-call-spacing",
                    "description": "require or disallow spacing between function identifiers and their invocations",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "function-call-argument-newline",
                    "description": "enforce line breaks between arguments of a function call",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "function-paren-newline",
                    "description": "enforce consistent line breaks inside function parentheses",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "generator-star-spacing",
                    "description": "enforce consistent spacing around `*` operators in generator functions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "implicit-arrow-linebreak",
                    "description": "enforce the location of arrow function bodies",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "indent",
                    "description": "enforce consistent indentation",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "jsx-quotes",
                    "description": "enforce the consistent use of either double or single quotes in JSX attributes",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "key-spacing",
                    "description": "enforce consistent spacing between keys and values in object literal properties",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "keyword-spacing",
                    "description": "enforce consistent spacing before and after keywords",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "line-comment-position",
                    "description": "enforce position of line comments",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "linebreak-style",
                    "description": "enforce consistent linebreak style",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "lines-around-comment",
                    "description": "require empty lines around comments",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "lines-between-class-members",
                    "description": "require or disallow an empty line between class members",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "max-len",
                    "description": "enforce a maximum line length",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "max-statements-per-line",
                    "description": "enforce a maximum number of statements allowed per line",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "multiline-ternary",
                    "description": "enforce newlines between operands of ternary expressions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "new-parens",
                    "description": "enforce or disallow parentheses when invoking a constructor with no arguments",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "newline-per-chained-call",
                    "description": "require a newline after each call in a method chain",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-extra-parens",
                    "description": "disallow unnecessary parentheses",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-mixed-spaces-and-tabs",
                    "description": "disallow mixed spaces and tabs for indentation",
                    "recommended": true,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-multi-spaces",
                    "description": "disallow multiple spaces",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-multiple-empty-lines",
                    "description": "disallow multiple empty lines",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-tabs",
                    "description": "disallow all tabs",
                    "recommended": false,
                    "fixable": false,
                    "hasSuggestions": false
                },
                {
                    "name": "no-trailing-spaces",
                    "description": "disallow trailing whitespace at the end of lines",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "no-whitespace-before-property",
                    "description": "disallow whitespace before properties",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "nonblock-statement-body-position",
                    "description": "enforce the location of single-line statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "object-curly-newline",
                    "description": "enforce consistent line breaks after opening and before closing braces",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "object-curly-spacing",
                    "description": "enforce consistent spacing inside braces",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "object-property-newline",
                    "description": "enforce placing object properties on separate lines",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "operator-linebreak",
                    "description": "enforce consistent linebreak style for operators",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "padded-blocks",
                    "description": "require or disallow padding within blocks",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "padding-line-between-statements",
                    "description": "require or disallow padding lines between statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "quotes",
                    "description": "enforce the consistent use of either backticks, double, or single quotes",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "rest-spread-spacing",
                    "description": "enforce spacing between rest and spread operators and their expressions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "semi",
                    "description": "require or disallow semicolons instead of ASI",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "semi-spacing",
                    "description": "enforce consistent spacing before and after semicolons",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "semi-style",
                    "description": "enforce location of semicolons",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "space-before-blocks",
                    "description": "enforce consistent spacing before blocks",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "space-before-function-paren",
                    "description": "enforce consistent spacing before `function` definition opening parenthesis",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "space-in-parens",
                    "description": "enforce consistent spacing inside parentheses",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "space-infix-ops",
                    "description": "require spacing around infix operators",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "space-unary-ops",
                    "description": "enforce consistent spacing before or after unary operators",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "switch-colon-spacing",
                    "description": "enforce spacing around colons of switch statements",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "template-curly-spacing",
                    "description": "require or disallow spacing around embedded expressions of template strings",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "template-tag-spacing",
                    "description": "require or disallow spacing between template tags and their literals",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "unicode-bom",
                    "description": "require or disallow Unicode byte order mark (BOM)",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "wrap-iife",
                    "description": "require parentheses around immediate `function` invocations",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "wrap-regex",
                    "description": "require parenthesis around regex literals",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                },
                {
                    "name": "yield-star-spacing",
                    "description": "require or disallow spacing around the `*` in `yield*` expressions",
                    "recommended": false,
                    "fixable": true,
                    "hasSuggestions": false
                }
            ]
        }
    ],
    "deprecated": {
        "name": "Deprecated",
        "description": "These rules have been deprecated in accordance with the <a href=\"/docs/user-guide/rule-deprecation\">deprecation policy</a>, and replaced by newer rules:",
        "rules": [
            {
                "name": "callback-return",
                "replacedBy": []
            },
            {
                "name": "global-require",
                "replacedBy": []
            },
            {
                "name": "handle-callback-err",
                "replacedBy": []
            },
            {
                "name": "id-blacklist",
                "replacedBy": [
                    "id-denylist"
                ]
            },
            {
                "name": "indent-legacy",
                "replacedBy": [
                    "indent"
                ]
            },
            {
                "name": "lines-around-directive",
                "replacedBy": [
                    "padding-line-between-statements"
                ]
            },
            {
                "name": "newline-after-var",
                "replacedBy": [
                    "padding-line-between-statements"
                ]
            },
            {
                "name": "newline-before-return",
                "replacedBy": [
                    "padding-line-between-statements"
                ]
            },
            {
                "name": "no-buffer-constructor",
                "replacedBy": []
            },
            {
                "name": "no-catch-shadow",
                "replacedBy": [
                    "no-shadow"
                ]
            },
            {
                "name": "no-mixed-requires",
                "replacedBy": []
            },
            {
                "name": "no-native-reassign",
                "replacedBy": [
                    "no-global-assign"
                ]
            },
            {
                "name": "no-negated-in-lhs",
                "replacedBy": [
                    "no-unsafe-negation"
                ]
            },
            {
                "name": "no-new-require",
                "replacedBy": []
            },
            {
                "name": "no-path-concat",
                "replacedBy": []
            },
            {
                "name": "no-process-env",
                "replacedBy": []
            },
            {
                "name": "no-process-exit",
                "replacedBy": []
            },
            {
                "name": "no-restricted-modules",
                "replacedBy": []
            },
            {
                "name": "no-spaced-func",
                "replacedBy": [
                    "func-call-spacing"
                ]
            },
            {
                "name": "no-sync",
                "replacedBy": []
            },
            {
                "name": "prefer-reflect",
                "replacedBy": []
            },
            {
                "name": "require-jsdoc",
                "replacedBy": []
            },
            {
                "name": "valid-jsdoc",
                "replacedBy": []
            }
        ]
    },
    "removed": {
        "name": "Removed",
        "description": "These rules from older versions of ESLint (before the <a href=\"/docs/user-guide/rule-deprecation\">deprecation policy</a> existed) have been replaced by newer rules:",
        "rules": [
            {
                "removed": "generator-star",
                "replacedBy": [
                    "generator-star-spacing"
                ]
            },
            {
                "removed": "global-strict",
                "replacedBy": [
                    "strict"
                ]
            },
            {
                "removed": "no-arrow-condition",
                "replacedBy": [
                    "no-confusing-arrow",
                    "no-constant-condition"
                ]
            },
            {
                "removed": "no-comma-dangle",
                "replacedBy": [
                    "comma-dangle"
                ]
            },
            {
                "removed": "no-empty-class",
                "replacedBy": [
                    "no-empty-character-class"
                ]
            },
            {
                "removed": "no-empty-label",
                "replacedBy": [
                    "no-labels"
                ]
            },
            {
                "removed": "no-extra-strict",
                "replacedBy": [
                    "strict"
                ]
            },
            {
                "removed": "no-reserved-keys",
                "replacedBy": [
                    "quote-props"
                ]
            },
            {
                "removed": "no-space-before-semi",
                "replacedBy": [
                    "semi-spacing"
                ]
            },
            {
                "removed": "no-wrap-func",
                "replacedBy": [
                    "no-extra-parens"
                ]
            },
            {
                "removed": "space-after-function-name",
                "replacedBy": [
                    "space-before-function-paren"
                ]
            },
            {
                "removed": "space-after-keywords",
                "replacedBy": [
                    "keyword-spacing"
                ]
            },
            {
                "removed": "space-before-function-parentheses",
                "replacedBy": [
                    "space-before-function-paren"
                ]
            },
            {
                "removed": "space-before-keywords",
                "replacedBy": [
                    "keyword-spacing"
                ]
            },
            {
                "removed": "space-in-brackets",
                "replacedBy": [
                    "object-curly-spacing",
                    "array-bracket-spacing"
                ]
            },
            {
                "removed": "space-return-throw-case",
                "replacedBy": [
                    "keyword-spacing"
                ]
            },
            {
                "removed": "space-unary-word-ops",
                "replacedBy": [
                    "space-unary-ops"
                ]
            },
            {
                "removed": "spaced-line-comment",
                "replacedBy": [
                    "spaced-comment"
                ]
            }
        ]
    }
}